name: Image Synchronization

on:
  push:
    branches: [ main ]
    paths:
    - 'images.yaml'

jobs:
  push-image:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Login to Aliyun Registry
      uses: docker/login-action@v1
      with:
        mode: login
        registry: ${{ secrets.REGISTRY }}  
        username: ${{ secrets.REGISTRY_USER }} 
        password: ${{ secrets.REGISTRY_PASSWORD }} 

    - name: Push Image and Generate Report
      id: push-image
      run: chmod +x ./app.sh && ./app.sh
      env:
        REGISTRY: ${{ secrets.REGISTRY }}
        NAMESPACE: ${{ secrets.REGISTRY_NAMESPACE }}
    
    - name: Upload Log Files
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: sync-logs
        path: |
          image_sync_*.log
          image_sync_*_success.log
          image_sync_*_errors.log
    
    - name: Parse and Send Notification
      if: always()
      run: |
        # 查找最新的日志文件
        LATEST_LOG=$(ls -t image_sync_*.log | head -1)
        LATEST_SUCCESS=$(ls -t image_sync_*_success.log | head -1)
        LATEST_ERROR=$(ls -t image_sync_*_errors.log | head -1)
        
        # 提取统计信息
        TOTAL=$(grep "总计处理" "$LATEST_LOG" | awk '{print $3}' || echo "未知")
        SUCCESS=$(grep "成功:" "$LATEST_LOG" | awk '{print $2}' || echo "0")
        FAILED=$(grep "失败:" "$LATEST_LOG" | awk '{print $2}' || echo "0")
        
        # 获取成功和失败的镜像列表
        SUCCESS_IMAGES=$(sed -n '/成功镜像列表:/,/失败:/{/成功镜像列表:/!{/失败:/!p}}' "$LATEST_LOG" | grep "^-" | sed 's/^  - //' | tr '\n' ',' | sed 's/,$//' || echo "无")
        FAILED_IMAGES=$(sed -n '/失败镜像列表:/,/exit/{/失败镜像列表:/!{/exit/!p}}' "$LATEST_LOG" | grep "^-" | sed 's/^  - //' | tr '\n' ',' | sed 's/,$//' || echo "无")
        
        # 构建Markdown格式的消息
        STATUS=$([ "${{ job.status }}" == "success" ] && echo "✅" || echo "❌")
        TITLE="$STATUS 镜像同步完成 - ${{ job.status }}"
        
        MESSAGE="## 📦 镜像同步报告
**仓库:** ${{ github.repository }}  
**分支:** ${{ github.ref }}  
**提交者:** ${{ github.actor }}  
**执行状态:** ${{ job.status }}  

### 📊 同步统计
- **总计处理:** $TOTAL 个镜像
- **成功同步:** $SUCCESS 个
- **同步失败:** $FAILED 个

### ✅ 成功镜像
$(if [ "$SUCCESS" -gt 0 ]; then 
  echo "$SUCCESS_IMAGES" | tr ',' '\n' | sed 's/^/- /'
else
  echo "- 无"
fi)

### ❌ 失败镜像
$(if [ "$FAILED" -gt 0 ]; then 
  echo "$FAILED_IMAGES" | tr ',' '\n' | sed 's/^/- /'
else
  echo "- 无"
fi)

### 🔗 详细信息
- **执行时间:** $(date +'%Y-%m-%d %H:%M:%S')
- **工作流详情:** https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
- **日志下载:** https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts"

        # 发送到微信
        curl -X POST \
          -d "title=$TITLE" \
          -d "desp=$MESSAGE" \
          "https://sctapi.ftqq.com/${{ secrets.SERVER_JIAN_SENDKEY }}.send"
